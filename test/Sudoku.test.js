const Sudoku = require('../src/Sudoku');
const { range } = require('../src/util');

const basicGrid = require('../exercises/basic');
const mediumGrid = require('../exercises/medium');
const hardGrid = require('../exercises/hard');

// Disable logs
console.log = () => {};

const formatStringResult = result => result.replace(/([^\S\r\n]{2,})/gm, '');

// const validateGame = game => {
//     // 0-8 zero indexed range of column / row indicies
//     const gridRange = range(0, game.gridSize);
//     // 1-9 range of values
//     const valueRange = range(1, game.gridSize + 1);
// };

describe('Sudoku', () => {
    it('solves the basic exercise correctly', () => {
        const game = new Sudoku(basicGrid);

        expect(game.toString()).toBe(
            formatStringResult(
                `|---|---|---|---|---|---|---|---|---|
                 | - | - | - | 4 | - | 2 | 9 | - | - |
                 |---|---|---|---|---|---|---|---|---|
                 | 8 | - | - | - | 3 | - | - | - | - |
                 |---|---|---|---|---|---|---|---|---|
                 | 4 | 2 | - | 1 | - | 6 | 8 | - | - |
                 |---|---|---|---|---|---|---|---|---|
                 | - | 9 | - | - | - | 1 | 4 | - | 5 |
                 |---|---|---|---|---|---|---|---|---|
                 | 5 | 1 | - | - | 6 | - | - | 9 | 8 |
                 |---|---|---|---|---|---|---|---|---|
                 | 2 | - | 8 | 5 | - | - | - | 6 | - |
                 |---|---|---|---|---|---|---|---|---|
                 | - | - | 3 | 2 | - | 9 | - | 7 | 1 |
                 |---|---|---|---|---|---|---|---|---|
                 | - | - | - | - | 5 | - | - | - | 9 |
                 |---|---|---|---|---|---|---|---|---|
                 | - | - | 2 | 6 | - | 7 | - | - | - |
                 |---|---|---|---|---|---|---|---|---|
                `
            )
        );

        expect(game.solve()).toBe(true);

        expect(game.toString()).toBe(
            formatStringResult(
                `|---|---|---|---|---|---|---|---|---|
                 | 3 | 7 | 5 | 4 | 8 | 2 | 9 | 1 | 6 |
                 |---|---|---|---|---|---|---|---|---|
                 | 8 | 6 | 1 | 9 | 3 | 5 | 7 | 4 | 2 |
                 |---|---|---|---|---|---|---|---|---|
                 | 4 | 2 | 9 | 1 | 7 | 6 | 8 | 5 | 3 |
                 |---|---|---|---|---|---|---|---|---|
                 | 7 | 9 | 6 | 8 | 2 | 1 | 4 | 3 | 5 |
                 |---|---|---|---|---|---|---|---|---|
                 | 5 | 1 | 4 | 7 | 6 | 3 | 2 | 9 | 8 |
                 |---|---|---|---|---|---|---|---|---|
                 | 2 | 3 | 8 | 5 | 9 | 4 | 1 | 6 | 7 |
                 |---|---|---|---|---|---|---|---|---|
                 | 6 | 8 | 3 | 2 | 4 | 9 | 5 | 7 | 1 |
                 |---|---|---|---|---|---|---|---|---|
                 | 1 | 4 | 7 | 3 | 5 | 8 | 6 | 2 | 9 |
                 |---|---|---|---|---|---|---|---|---|
                 | 9 | 5 | 2 | 6 | 1 | 7 | 3 | 8 | 4 |
                 |---|---|---|---|---|---|---|---|---|
                `
            )
        );
    });

    it('solves the medium exercise correctly', () => {
        const game = new Sudoku(mediumGrid);

        expect(game.toString()).toBe(
            formatStringResult(
                `|---|---|---|---|---|---|---|---|---|
                 | - | 2 | - | - | - | - | 8 | - | - |
                 |---|---|---|---|---|---|---|---|---|
                 | - | 5 | - | - | - | - | - | 4 | - |
                 |---|---|---|---|---|---|---|---|---|
                 | - | - | - | 8 | 9 | 1 | 2 | - | - |
                 |---|---|---|---|---|---|---|---|---|
                 | - | - | - | 4 | - | 9 | - | 3 | - |
                 |---|---|---|---|---|---|---|---|---|
                 | 7 | - | - | - | - | 2 | - | - | - |
                 |---|---|---|---|---|---|---|---|---|
                 | 2 | 1 | - | - | - | 8 | - | 6 | 4 |
                 |---|---|---|---|---|---|---|---|---|
                 | - | - | 8 | - | - | - | 4 | - | 7 |
                 |---|---|---|---|---|---|---|---|---|
                 | - | 4 | 2 | 6 | 8 | - | 9 | - | - |
                 |---|---|---|---|---|---|---|---|---|
                 | 1 | 9 | - | - | 5 | - | - | - | 3 |
                 |---|---|---|---|---|---|---|---|---|
                `
            )
        );

        expect(game.solve()).toBe(true);

        expect(game.toString()).toBe(
            formatStringResult(
                `|---|---|---|---|---|---|---|---|---|
                 | 9 | 2 | 6 | 3 | 4 | 5 | 8 | 7 | 1 |
                 |---|---|---|---|---|---|---|---|---|
                 | 8 | 5 | 1 | 7 | 2 | 6 | 3 | 4 | 9 |
                 |---|---|---|---|---|---|---|---|---|
                 | 4 | 7 | 3 | 8 | 9 | 1 | 2 | 5 | 6 |
                 |---|---|---|---|---|---|---|---|---|
                 | 6 | 8 | 5 | 4 | 7 | 9 | 1 | 3 | 2 |
                 |---|---|---|---|---|---|---|---|---|
                 | 7 | 3 | 4 | 1 | 6 | 2 | 5 | 9 | 8 |
                 |---|---|---|---|---|---|---|---|---|
                 | 2 | 1 | 9 | 5 | 3 | 8 | 7 | 6 | 4 |
                 |---|---|---|---|---|---|---|---|---|
                 | 5 | 6 | 8 | 9 | 1 | 3 | 4 | 2 | 7 |
                 |---|---|---|---|---|---|---|---|---|
                 | 3 | 4 | 2 | 6 | 8 | 7 | 9 | 1 | 5 |
                 |---|---|---|---|---|---|---|---|---|
                 | 1 | 9 | 7 | 2 | 5 | 4 | 6 | 8 | 3 |
                 |---|---|---|---|---|---|---|---|---|
                `
            )
        );
    });

    it('solves the hard exercise correctly', () => {
        const game = new Sudoku(hardGrid);

        expect(game.toString()).toBe(
            formatStringResult(
                `|---|---|---|---|---|---|---|---|---|
                 | - | - | - | - | 3 | 2 | 6 | - | 5 |
                 |---|---|---|---|---|---|---|---|---|
                 | - | - | 2 | - | - | - | - | - | - |
                 |---|---|---|---|---|---|---|---|---|
                 | 5 | - | - | 7 | - | - | - | - | 9 |
                 |---|---|---|---|---|---|---|---|---|
                 | - | 4 | 5 | - | - | 1 | 9 | - | - |
                 |---|---|---|---|---|---|---|---|---|
                 | - | - | - | 3 | - | - | - | 5 | - |
                 |---|---|---|---|---|---|---|---|---|
                 | 8 | - | 1 | - | - | - | 4 | - | - |
                 |---|---|---|---|---|---|---|---|---|
                 | - | - | - | - | - | - | 1 | - | 7 |
                 |---|---|---|---|---|---|---|---|---|
                 | 6 | 8 | - | 9 | - | - | 3 | - | - |
                 |---|---|---|---|---|---|---|---|---|
                 | 9 | - | - | - | - | 7 | - | - | - |
                 |---|---|---|---|---|---|---|---|---|
                `
            )
        );

        expect(game.solve()).toBe(true);

        expect(game.toString()).toBe(
            formatStringResult(
                `|---|---|---|---|---|---|---|---|---|
                 | 4 | 7 | 9 | 1 | 3 | 2 | 6 | 8 | 5 |
                 |---|---|---|---|---|---|---|---|---|
                 | 1 | 6 | 2 | 5 | 9 | 8 | 7 | 3 | 4 |
                 |---|---|---|---|---|---|---|---|---|
                 | 5 | 3 | 8 | 7 | 6 | 4 | 2 | 1 | 9 |
                 |---|---|---|---|---|---|---|---|---|
                 | 3 | 4 | 5 | 8 | 7 | 1 | 9 | 2 | 6 |
                 |---|---|---|---|---|---|---|---|---|
                 | 7 | 2 | 6 | 3 | 4 | 9 | 8 | 5 | 1 |
                 |---|---|---|---|---|---|---|---|---|
                 | 8 | 9 | 1 | 2 | 5 | 6 | 4 | 7 | 3 |
                 |---|---|---|---|---|---|---|---|---|
                 | 2 | 5 | 4 | 6 | 8 | 3 | 1 | 9 | 7 |
                 |---|---|---|---|---|---|---|---|---|
                 | 6 | 8 | 7 | 9 | 1 | 5 | 3 | 4 | 2 |
                 |---|---|---|---|---|---|---|---|---|
                 | 9 | 1 | 3 | 4 | 2 | 7 | 5 | 6 | 8 |
                 |---|---|---|---|---|---|---|---|---|
                `
            )
        );
    });
});